plugins {
    id "com.android.library"
    id "kotlin-android"
    id "maven-publish"
}

group = "net.apptronic.core"
version = rootProject.ext.library_android_version

android {

    compileSdkVersion 29

    defaultConfig {
        versionCode = 1
        versionName = rootProject.ext.library_android_version
        minSdkVersion 21
        targetSdkVersion 29
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "en"
    }

}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    compileOnly "net.apptronic.core:core-commons:${rootProject.ext.library_core_version}"

    compileOnly "androidx.core:core:1.3.0"
    compileOnly "androidx.appcompat:appcompat:1.1.0"
    compileOnly "com.google.android.material:material:1.1.0"
    compileOnly 'androidx.recyclerview:recyclerview:1.1.0'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

Properties awsCredentials = new Properties()
File awsCredentialsFile = file("../../aws.credentials")
if (awsCredentialsFile.exists()) {
    awsCredentials.load(awsCredentialsFile.newDataInputStream())
}


publishing {
    publications {
        bar(MavenPublication) {
            artifact(sourceJar)
            artifact("build/outputs/aar/library-debug.aar")
            groupId = "net.apptronic.core"
            artifactId = "core-android"
            version = rootProject.ext.library_android_version
        }
    }
    repositories {
        maven {
            url "s3://maven.apptronic.net/"
            credentials(AwsCredentials) {
                accessKey awsCredentials.getProperty("accessKey", "")
                secretKey awsCredentials.getProperty("secretKey", "")
            }
        }
    }
}