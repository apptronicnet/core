// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext.kotlin_version = "1.3.31"
    ext.atomicfu_version = '0.12.7'
    ext.junit_version = "4.12"
    ext.lib_group_id = "net.apptronic.core"
    ext.lib_version = "0.1.2-09"

    repositories {
        google()
        gradlePluginPortal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.0.6"
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:$atomicfu_version"
    }
}

wrapper {
    gradleVersion = "5.3.1"
    distributionType = "ALL"
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task cleanAll(dependsOn: [':lib:clean',
                          ':lib_android:clean'])

task assembleLibs(dependsOn: [
        ':cleanAll',
        ':lib:jvmJar',
        ':lib_android:bundleDebugAar'
]) {
    doLast {
        def destDir = new File("out")
        destDir.mkdir()
        for (def item : destDir.listFiles()) {
            item.delete()
        }
        file("lib/build/libs/lib-jvm-${rootProject.ext.lib_version}.jar").renameTo("out/net.apptronic.core.jar")
        file("lib_android/build/outputs/aar/lib_android-debug.aar").renameTo("out/net.apptronic.android.aar")
    }
}


task publishLibsToMavenLocal(dependsOn: [
        ':cleanAll',
        ':lib:publishToMavenLocal',
        ':lib_android:bundleDebugAar',
        ':lib_android:publishToMavenLocal'
])